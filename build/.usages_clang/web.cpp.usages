22 serialization::archive 14 0 0 0 0 44 /home/trygve/Dokumenter/TDAT2004/Oving 3/web 50 /home/trygve/Dokumenter/TDAT2004/Oving 3/web/build 0 0 408 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 8 iostream 1 11 1 19 18446744073709551615 1 > 1 19 1 20 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 3 sys 2 11 2 14 18446744073709551615 1 / 2 14 2 15 18446744073709551615 6 socket 2 15 2 21 18446744073709551615 1 . 2 21 2 22 18446744073709551615 1 h 2 22 2 23 18446744073709551615 1 > 2 23 2 24 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 7 netinet 3 11 3 18 18446744073709551615 1 / 3 18 3 19 18446744073709551615 2 in 3 19 3 21 18446744073709551615 1 . 3 21 3 22 18446744073709551615 1 h 3 22 3 23 18446744073709551615 1 > 3 23 3 24 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 4 arpa 4 11 4 15 18446744073709551615 1 / 4 15 4 16 18446744073709551615 4 inet 4 16 4 20 18446744073709551615 1 . 4 20 4 21 18446744073709551615 1 h 4 21 4 22 18446744073709551615 1 > 4 22 4 23 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 unistd 5 11 5 17 18446744073709551615 1 . 5 17 5 18 18446744073709551615 1 h 5 18 5 19 18446744073709551615 1 > 5 19 5 20 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 string 6 11 6 17 18446744073709551615 1 > 6 17 6 18 18446744073709551615 1 # 7 1 7 2 18446744073709551615 6 define 7 2 7 8 18446744073709551615 4 PORT 7 9 7 13 18446744073709551615 4 8080 7 14 7 18 18446744073709551615 3 int 8 1 8 4 18446744073709551615 4 main 8 5 8 9 0 1 ( 8 9 8 10 0 1 ) 8 10 8 11 0 1 { 9 1 9 2 18446744073709551615 3 int 10 5 10 8 18446744073709551615 9 server_fd 10 9 10 18 1 1 , 10 18 10 19 18446744073709551615 10 new_socket 10 20 10 30 2 1 ; 10 30 10 31 18446744073709551615 6 struct 11 5 11 11 18446744073709551615 11 sockaddr_in 11 12 11 23 3 7 address 11 24 11 31 4 1 ; 11 31 11 32 18446744073709551615 3 int 12 5 12 8 18446744073709551615 3 opt 12 9 12 12 5 1 = 12 13 12 14 18446744073709551615 1 1 12 15 12 16 18446744073709551615 1 ; 12 16 12 17 18446744073709551615 4 char 13 5 13 9 18446744073709551615 6 buffer 13 10 13 16 6 1 [ 13 16 13 17 18446744073709551615 4 1024 13 17 13 21 18446744073709551615 1 ] 13 21 13 22 18446744073709551615 1 = 13 23 13 24 18446744073709551615 1 { 13 25 13 26 18446744073709551615 1 0 13 26 13 27 18446744073709551615 1 } 13 27 13 28 18446744073709551615 1 ; 13 28 13 29 18446744073709551615 3 int 14 5 14 8 18446744073709551615 7 addrlen 14 9 14 16 7 1 = 14 17 14 18 18446744073709551615 6 sizeof 14 19 14 25 18446744073709551615 1 ( 14 25 14 26 18446744073709551615 7 address 14 26 14 33 4 1 ) 14 33 14 34 18446744073709551615 1 ; 14 34 14 35 18446744073709551615 3 std 16 5 16 8 8 2 :: 16 8 16 10 18446744073709551615 6 string 16 10 16 16 9 4 http 16 17 16 21 10 1 = 16 22 16 23 18446744073709551615 21 "HTTP/1.1 200 OK\r\n" 16 24 16 45 18446744073709551615 1 ; 16 46 16 47 18446744073709551615 4 http 17 5 17 9 10 1 . 17 9 17 10 11 6 append 17 10 17 16 11 1 ( 17 16 17 17 11 29 "Content-Type: text/html\r\n" 17 17 17 46 18446744073709551615 1 ) 17 46 17 47 11 1 ; 17 47 17 48 18446744073709551615 4 http 18 5 18 9 10 1 . 18 9 18 10 11 6 append 18 10 18 16 11 1 ( 18 16 18 17 11 6 "\r\n" 18 17 18 23 18446744073709551615 1 ) 18 23 18 24 11 1 ; 18 24 18 25 18446744073709551615 4 http 19 5 19 9 10 1 . 19 9 19 10 11 6 append 19 10 19 16 11 1 ( 19 16 19 17 11 18 "<HTML><BODY>\r\n" 19 17 19 35 18446744073709551615 1 ) 19 35 19 36 11 1 ; 19 36 19 37 18446744073709551615 4 http 20 5 20 9 10 1 . 20 9 20 10 11 6 append 20 10 20 16 11 1 ( 20 16 20 17 11 71 "<H1> Hilsen. Du har koblet deg opp til min enkle web-tjener </h1>\r\n" 20 17 20 88 18446744073709551615 1 ) 20 88 20 89 11 1 ; 20 89 20 90 18446744073709551615 4 http 21 5 21 9 10 1 . 21 9 21 10 11 6 append 21 10 21 16 11 1 ( 21 16 21 17 11 20 "</BODY></HTML>\r\n" 21 17 21 37 18446744073709551615 1 ) 21 37 21 38 11 1 ; 21 38 21 39 18446744073709551615 3 std 23 5 23 8 8 2 :: 23 8 23 10 18446744073709551615 4 cout 23 10 23 14 12 2 << 23 15 23 17 13 4 http 23 18 23 22 10 2 << 23 23 23 25 14 3 std 23 26 23 29 8 2 :: 23 29 23 31 15 4 endl 23 31 23 35 15 1 ; 23 35 23 36 18446744073709551615 34 // Creating socket file descriptor 25 5 25 39 18446744073709551615 2 if 26 5 26 7 18446744073709551615 1 ( 26 8 26 9 18446744073709551615 1 ( 26 9 26 10 18446744073709551615 9 server_fd 26 10 26 19 1 1 = 26 20 26 21 18446744073709551615 6 socket 26 22 26 28 16 1 ( 26 28 26 29 16 7 AF_INET 26 29 26 36 16 1 , 26 36 26 37 16 11 SOCK_STREAM 26 38 26 49 16 1 , 26 49 26 50 16 1 0 26 51 26 52 18446744073709551615 1 ) 26 52 26 53 16 1 ) 26 53 26 54 18446744073709551615 2 == 26 55 26 57 18446744073709551615 1 0 26 58 26 59 18446744073709551615 1 ) 26 59 26 60 18446744073709551615 1 { 27 5 27 6 18446744073709551615 6 perror 28 9 28 15 17 1 ( 28 15 28 16 17 15 "socket failed" 28 16 28 31 18446744073709551615 1 ) 28 31 28 32 17 1 ; 28 32 28 33 18446744073709551615 4 exit 29 9 29 13 18 1 ( 29 13 29 14 18 12 EXIT_FAILURE 29 14 29 26 18 1 ) 29 26 29 27 18 1 ; 29 27 29 28 18446744073709551615 1 } 30 5 30 6 18446744073709551615 47 // Forcefully attaching socket to the port 8080 32 5 32 52 18446744073709551615 2 if 33 5 33 7 18446744073709551615 1 ( 33 8 33 9 18446744073709551615 10 setsockopt 33 9 33 19 19 1 ( 33 19 33 20 19 9 server_fd 33 20 33 29 1 1 , 33 29 33 30 19 10 SOL_SOCKET 33 31 33 41 19 1 , 33 41 33 42 19 12 SO_REUSEADDR 33 43 33 55 19 1 | 33 56 33 57 18446744073709551615 12 SO_REUSEPORT 33 58 33 70 18446744073709551615 1 , 33 70 33 71 19 1 & 34 51 34 52 18446744073709551615 3 opt 34 52 34 55 5 1 , 34 55 34 56 19 6 sizeof 34 57 34 63 18446744073709551615 1 ( 34 63 34 64 18446744073709551615 3 opt 34 64 34 67 5 1 ) 34 67 34 68 18446744073709551615 1 ) 34 68 34 69 19 1 ) 34 69 34 70 18446744073709551615 1 { 35 5 35 6 18446744073709551615 6 perror 36 9 36 15 17 1 ( 36 15 36 16 17 12 "setsockopt" 36 16 36 28 18446744073709551615 1 ) 36 28 36 29 17 1 ; 36 29 36 30 18446744073709551615 4 exit 37 9 37 13 18 1 ( 37 13 37 14 18 12 EXIT_FAILURE 37 14 37 26 18 1 ) 37 26 37 27 18 1 ; 37 27 37 28 18446744073709551615 1 } 38 5 38 6 18446744073709551615 7 address 39 5 39 12 4 1 . 39 12 39 13 18446744073709551615 10 sin_family 39 13 39 23 20 1 = 39 24 39 25 18446744073709551615 7 AF_INET 39 26 39 33 18446744073709551615 1 ; 39 33 39 34 18446744073709551615 7 address 40 5 40 12 4 1 . 40 12 40 13 18446744073709551615 8 sin_addr 40 13 40 21 21 1 . 40 21 40 22 18446744073709551615 6 s_addr 40 22 40 28 22 1 = 40 29 40 30 18446744073709551615 10 INADDR_ANY 40 31 40 41 18446744073709551615 1 ; 40 41 40 42 18446744073709551615 7 address 41 5 41 12 4 1 . 41 12 41 13 18446744073709551615 8 sin_port 41 13 41 21 23 1 = 41 22 41 23 18446744073709551615 5 htons 41 24 41 29 24 1 ( 41 29 41 30 24 4 PORT 41 31 41 35 24 1 ) 41 36 41 37 24 1 ; 41 37 41 38 18446744073709551615 47 // Forcefully attaching socket to the port 8080 43 5 43 52 18446744073709551615 2 if 44 5 44 7 18446744073709551615 1 ( 44 8 44 9 18446744073709551615 4 bind 44 9 44 13 25 1 ( 44 13 44 14 25 9 server_fd 44 14 44 23 1 1 , 44 23 44 24 25 1 ( 44 25 44 26 18446744073709551615 6 struct 44 26 44 32 18446744073709551615 8 sockaddr 44 33 44 41 26 1 * 44 42 44 43 18446744073709551615 1 ) 44 43 44 44 18446744073709551615 1 & 44 44 44 45 18446744073709551615 7 address 44 45 44 52 4 1 , 44 52 44 53 25 6 sizeof 45 34 45 40 18446744073709551615 1 ( 45 40 45 41 18446744073709551615 7 address 45 41 45 48 4 1 ) 45 48 45 49 18446744073709551615 1 ) 45 49 45 50 25 1 < 45 50 45 51 18446744073709551615 1 0 45 51 45 52 18446744073709551615 1 ) 45 52 45 53 18446744073709551615 1 { 46 5 46 6 18446744073709551615 6 perror 47 9 47 15 17 1 ( 47 15 47 16 17 13 "bind failed" 47 16 47 29 18446744073709551615 1 ) 47 29 47 30 17 1 ; 47 30 47 31 18446744073709551615 4 exit 48 9 48 13 18 1 ( 48 13 48 14 18 12 EXIT_FAILURE 48 14 48 26 18 1 ) 48 26 48 27 18 1 ; 48 27 48 28 18446744073709551615 1 } 49 5 49 6 18446744073709551615 2 if 50 5 50 7 18446744073709551615 1 ( 50 8 50 9 18446744073709551615 6 listen 50 9 50 15 27 1 ( 50 15 50 16 27 9 server_fd 50 16 50 25 1 1 , 50 25 50 26 27 1 3 50 27 50 28 18446744073709551615 1 ) 50 28 50 29 27 1 < 50 30 50 31 18446744073709551615 1 0 50 32 50 33 18446744073709551615 1 ) 50 33 50 34 18446744073709551615 1 { 51 5 51 6 18446744073709551615 6 perror 52 9 52 15 17 1 ( 52 15 52 16 17 8 "listen" 52 16 52 24 18446744073709551615 1 ) 52 24 52 25 17 1 ; 52 25 52 26 18446744073709551615 4 exit 53 9 53 13 18 1 ( 53 13 53 14 18 12 EXIT_FAILURE 53 14 53 26 18 1 ) 53 26 53 27 18 1 ; 53 27 53 28 18446744073709551615 1 } 54 5 54 6 18446744073709551615 3 std 56 5 56 8 8 2 :: 56 8 56 10 18446744073709551615 4 cout 56 10 56 14 12 2 << 56 15 56 17 13 16 "server started" 56 18 56 34 18446744073709551615 2 << 56 35 56 37 14 3 std 56 38 56 41 8 2 :: 56 41 56 43 15 4 endl 56 43 56 47 15 1 ; 56 47 56 48 18446744073709551615 5 while 58 5 58 10 18446744073709551615 1 ( 58 11 58 12 18446744073709551615 1 1 58 12 58 13 18446744073709551615 1 ) 58 13 58 14 18446744073709551615 1 { 58 15 58 16 18446744073709551615 2 if 60 9 60 11 18446744073709551615 1 ( 60 12 60 13 18446744073709551615 1 ( 60 13 60 14 18446744073709551615 10 new_socket 60 14 60 24 2 1 = 60 25 60 26 18446744073709551615 6 accept 60 27 60 33 28 1 ( 60 33 60 34 28 9 server_fd 60 34 60 43 1 1 , 60 43 60 44 28 1 ( 60 45 60 46 18446744073709551615 6 struct 60 46 60 52 18446744073709551615 8 sockaddr 60 53 60 61 26 1 * 60 62 60 63 18446744073709551615 1 ) 60 63 60 64 18446744073709551615 1 & 60 64 60 65 18446744073709551615 7 address 60 65 60 72 4 1 , 60 72 60 73 28 1 ( 61 28 61 29 18446744073709551615 9 socklen_t 61 29 61 38 29 1 * 61 38 61 39 18446744073709551615 1 ) 61 39 61 40 18446744073709551615 1 & 61 40 61 41 18446744073709551615 7 addrlen 61 41 61 48 7 1 ) 61 48 61 49 28 1 ) 61 49 61 50 18446744073709551615 1 < 61 50 61 51 18446744073709551615 1 0 61 51 61 52 18446744073709551615 1 ) 61 52 61 53 18446744073709551615 1 { 62 9 62 10 18446744073709551615 6 perror 63 13 63 19 17 1 ( 63 19 63 20 17 8 "accept" 63 20 63 28 18446744073709551615 1 ) 63 28 63 29 17 1 ; 63 29 63 30 18446744073709551615 4 exit 64 13 64 17 18 1 ( 64 17 64 18 18 12 EXIT_FAILURE 64 18 64 30 18 1 ) 64 30 64 31 18 1 ; 64 31 64 32 18446744073709551615 1 } 65 9 65 10 18446744073709551615 3 std 67 9 67 12 8 2 :: 67 12 67 14 18446744073709551615 4 cout 67 14 67 18 12 2 << 67 19 67 21 13 11 "connected" 67 22 67 33 18446744073709551615 2 << 67 34 67 36 14 3 std 67 37 67 40 8 2 :: 67 40 67 42 15 4 endl 67 42 67 46 15 1 ; 67 46 67 47 18446744073709551615 4 read 69 9 69 13 30 1 ( 69 13 69 14 30 10 new_socket 69 14 69 24 2 1 , 69 24 69 25 30 6 buffer 69 26 69 32 6 1 , 69 32 69 33 30 4 1024 69 34 69 38 18446744073709551615 1 ) 69 38 69 39 30 1 ; 69 39 69 40 18446744073709551615 3 std 70 9 70 12 8 2 :: 70 12 70 14 18446744073709551615 4 cout 70 14 70 18 12 2 << 70 19 70 21 13 3 std 70 22 70 25 8 2 :: 70 25 70 27 18446744073709551615 6 string 70 27 70 33 9 1 ( 70 33 70 34 31 6 buffer 70 34 70 40 6 1 ) 70 40 70 41 31 2 << 70 42 70 44 14 3 std 70 45 70 48 8 2 :: 70 48 70 50 15 4 endl 70 50 70 54 15 1 ; 70 54 70 55 18446744073709551615 5 write 72 9 72 14 32 1 ( 72 14 72 15 32 10 new_socket 72 15 72 25 2 1 , 72 25 72 26 32 4 http 72 27 72 31 10 1 . 72 31 72 32 33 5 c_str 72 32 72 37 33 1 ( 72 37 72 38 33 1 ) 72 38 72 39 33 1 , 72 39 72 40 32 4 http 72 41 72 45 10 1 . 72 45 72 46 34 4 size 72 46 72 50 34 1 ( 72 50 72 51 34 1 ) 72 51 72 52 34 1 ) 72 52 72 53 32 1 ; 72 53 72 54 18446744073709551615 3 std 73 9 73 12 8 2 :: 73 12 73 14 18446744073709551615 4 cout 73 14 73 18 12 2 << 73 19 73 21 13 6 "sent" 73 22 73 28 18446744073709551615 2 << 73 28 73 30 14 3 std 73 31 73 34 8 2 :: 73 34 73 36 15 4 endl 73 36 73 40 15 1 ; 73 40 73 41 18446744073709551615 5 close 75 9 75 14 35 1 ( 75 14 75 15 35 10 new_socket 75 15 75 25 2 1 ) 75 25 75 26 35 1 ; 75 26 75 27 18446744073709551615 1 } 76 5 76 6 18446744073709551615 6 return 78 5 78 11 18446744073709551615 1 0 78 12 78 13 18446744073709551615 1 ; 78 13 78 14 18446744073709551615 1 } 79 1 79 2 18446744073709551615 0 0 36 0 0 0 8 0 0 1 3 0 4 main 9 1 3 0 57 10:9:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 9 1 3 0 58 10:20:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 2 1 3 0 11 sockaddr_in 9 1 3 0 58 11:24:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 9 1 3 0 57 12:9:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 9 1 3 0 58 13:10:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 9 1 3 0 57 14:9:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 22 1 3 0 3 std 20 1 3 0 18 string:__cxx11:std 9 1 3 0 58 16:17:/home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 21 1 3 0 31 append:basic_string:__cxx11:std 9 1 3 0 8 cout:std 8 1 3 0 12 operator:std 21 1 3 0 26 operator:basic_ostream:std 8 1 3 0 8 endl:std 8 1 3 0 6 socket 8 1 3 0 6 perror 8 1 3 0 4 exit 8 1 3 0 10 setsockopt 6 1 3 0 22 sin_family:sockaddr_in 6 1 3 0 20 sin_addr:sockaddr_in 6 1 3 0 14 s_addr:in_addr 6 1 3 0 20 sin_port:sockaddr_in 8 1 3 0 5 htons 8 1 3 0 4 bind 2 1 3 0 8 sockaddr 8 1 3 0 6 listen 8 1 3 0 6 accept 20 1 3 0 9 socklen_t 8 1 3 0 4 read 24 1 3 0 24 basic_string:__cxx11:std 8 1 3 0 5 write 21 1 3 0 30 c_str:basic_string:__cxx11:std 21 1 3 0 29 size:basic_string:__cxx11:std 8 1 3 0 5 close 0 0 1 0 0 0 52 /home/trygve/Dokumenter/TDAT2004/Oving 3/web/web.cpp 1519992854